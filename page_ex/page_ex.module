<?php
function page_ex_menu() {
  $items = array();
  $items['PageEx'] = array(
    'title' => 'Nat Page Example',
    'description' => 'Page Decription',
    'page callback' => 'start_nat',
    //'page callback' => 'drupal_get_form',
    //'page arguments' => array('natform'),  
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
  );
   $items['queryTestInsert'] = array(
    'title' => 'Insert Page Example',
    'description' => 'Insert Decription',
    'page callback' => 'insertdb',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
    );
  return $items;
}

function insertdbproto() {
 // $result = db_query("INSERT INTO {personal} (nid, hash, score, email) VALUES (2, 'something else', 'sdfsdf','email')");
  $data = array(
    'nid' => '',
    'hash' => 'sode',
    'score' => 3,
    'email' => 'sdflsdf'
  );
  $result=drupal_write_record('personal', $data);
  return  db_last_insert_id('personal', 'nid');
}
function insertdb($hash,$score,$email) {
  $data = array(
    'nid' => '',
    'hash' => $hash,
    'score' => $score,
    'email' => $email
  );
  $result=drupal_write_record('personal', $data);
}
function getHashKey() {
  $base=1000000;
  $result = db_query_range('SELECT max(nid)+1 as nextId from {personal}',  0, 1);
  $offset= db_fetch_object($result)->nextId; 
 
  $number=$base+$offset;
  $out   = "";
  $codes = "abcdefghjkmnpqrstuvwxyz23456789ABCDEFGHJKMNPQRSTUVWXYZ";
  while ($number > 53) {
    $key    = $number % 54;
    $number = floor($number / 54) - 1;
    $out    = $codes{$key}.$out;
  }
   return $codes{$number}.$out;
  
}
//manual hashkey (original)
function generate_code($offset,$base=180000) {
  $number=$base+$offset;
  $out   = "";
  $codes = "abcdefghjkmnpqrstuvwxyz23456789ABCDEFGHJKMNPQRSTUVWXYZ";

  while ($number > 53) {
    $key    = $number % 54;
    $number = floor($number / 54) - 1;
    $out    = $codes{$key}.$out;
  }
    return $codes{$number}.$out;
}


function start_nat(){
   return "<h1>start_nat() fn</h1>".nat('1','5','carbon').getHashKey();
}
function nat($score, $total,$icon) {
  drupal_add_js(drupal_get_path('module', 'page_ex') . '/jquery.ratings.js');
  drupal_add_js(drupal_get_path('module', 'page_ex') . '/example.js');
  drupal_add_js(array('page_ex' =>  array('score' => $score, 'total' => $total,'icon'=>$icon)), 'setting');
  drupal_add_css(drupal_get_path('module', 'page_ex') . '/jquery.ratings.css');
  return "<div id='example-1'></div> <br />  ";
}
function natform($form_state) {
  $choices=drupal_map_assoc(array("water","carbon"));
  if($form_state['values']) {
    $form['foo'] = array(
    '#type' => 'markup',
    '#value' => nat($form_state['values']['score'],$form_state['values']['total'],$form_state['values']['icon']),
  );
 }
  $form['score'] = array(
    '#type' => 'textfield',
    '#title' => t('Score'),
    '#size' => 5,
    '#maxlength' => 10,
    '#description' => t('Your Score'),
  );
  $form['total'] = array(
    '#type' => 'textfield',
    '#title' => t('Total'),
    '#size' => 5,
    '#maxlength' => 10,
    '#description' => t('Total Score'),
  );
  $form['icon'] = array('#type'=>'select', '#options'=>$choices);
  $form['submit'] = array('#type' => 'submit', '#value' => t('Send') );
  return $form; 
}
function natform_validate($form, &$form_state) {

    //form_set_error('score',t('Form error'));
   
}
function natform_submit($form, &$form_state) {
  $form_state['storage']['values'] = $form_state['values'];
  $form_state['rebuild'] = TRUE;
}
