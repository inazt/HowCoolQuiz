<?php
//print out form data



function howcool_menu() {
  $items = array();

  $items['form/%'] = array(
  'title' => 'HowCool!Form',
  'description' => 'Page Decription',
  'page callback' => 'form_view',
  //'page callback' => 'drupal_get_form',
  'page arguments' => array(1),     
  'access arguments' => array('access content'),
  'type' => MENU_NORMAL_ITEM,
  'file' => 'howcool.inc',
  );

  $items['result/%'] = array(
    'title'=> 'HowCool!Result',
    'description'=>'Show result',
    'page callback'=>'result_view',
    'page arguments' => array(1),
    'access arguments'=>array('access content'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'howcool.inc',
   
  );
 
  $items['test/insert'] = array(
    'title'=> 'HowCool!InsertTest',
    'description'=>'Show insert',
    'page callback'=>'testInsert',
    'access arguments'=>array('access content'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'howcool.inc',
  );
  
  $items['test/view'] = array(
    'title' => 'HowCool!ViewResult',
    'description'=>'Show Result',
    'page callback' => 'testResult',
    'access arguments' => array('access content'),
    'type' => MENU_NORMAL_ITEM,
    'file' => 'howcool.inc'
    );
    
  return $items;
}


/**
    How Cool Display?

*/

function form_decision($data){

  return $data['page']['#value'];
}


function form_view($page){
  $show = 'this is form--->'.$page;
  $show .= drupal_get_form('form_generation',$form_state,$page);
  return $show;
}

function result_view($input){
  $show = 'this is result!!'.$input;
  $show .= print_r(get_result($input),1);
  $show .=gen_graph(get_result($input));
  return $show;
}


/**
    How Cool Form Stucture

*/
function form_generation($form_state,$page){
  drupal_set_message('sss');
  drupal_set_message($page);
  if(empty($form_state['values'])){
    //drupal_set_message(form_decision(email_form($form_state)));  
    return email_form($form_state);
  }else if($form_state['values']['op']=='Back'){
    //drupal_set_message(form_decision(form_back_generation($form_state)));  
    return form_back_generation($form_state);
  }else{
    //drupal_set_message(form_decision(form_next_generation($form_state)));  
    return form_next_generation($form_state);
  
  }
}

function form_next_generation($form_state){
  
  switch($form_state['values']['page']){
    case 'email': return personal_form($form_state);
      break;
    case 'personal': return check_form($form_state);
      break;
     case 'check' : return scale_form($form_state);
      break;
  }
}

function form_back_generation($form_state){
    
  switch($form_state['values']['page'] ){
    case 'personal':   return email_form($form_state);
      break; 
    case 'check': return personal_form($form_state);
      break;
     case 'scale' : return check_form($form_state);
      break;
  } 
  
  
}

function form_generation_submit(&$form, &$form_state) {
  $form_state['values']['sompop']++;
  $form_state['storage']['values'] = $form_state['values'];
  $form_state['rebuild'] = TRUE;
  //Jumper!!!
  if($form_state['values']['page']=='scale' && $form_state['values']['op']!='Back'){
    logic($form_state);
  }
}

function email_form($form_state){
  if(empty($form_state['values']['email'])){
    $form['email'] = array(
      '#type' => 'textfield', 
      '#title' => t('Email'), 
      '#size' => 60, 
      '#maxlength' => 128, 
      '#required' => TRUE,
    );
  }else{
    $form['email'] = array(
      '#type' => 'textfield', 
      '#title' => t('Email'), 
      '#size' => 60, 
      '#maxlength' => 128, 
      '#default_value' => $form_state['values']['email'],
      '#required' => TRUE,
    );
  }
  $form['#action'] = url('form/step2');
  $form['page'] = array('#type' => 'hidden', '#value' => 'email');
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Next'),
    
  );
  return $form;
}

function personal_form($form_state){
  $form['email']= array('#type' => 'hidden', '#value' => $form_state['values']['email']);
  if(empty($form_state['values']['sex'])){
    $form['sex'] = array(
      '#type' => 'radios', 
      '#title' => t('เพศ'), 
     //'#default_value' => variable_get('comment_preview', 1), 
     '#options' => array(t('ชาย'), t('หญิง')),
      '#required' =>TRUE,
    );
  }else{
    $form['sex'] = array(
     '#type' => 'radios', 
     '#title' => t('เพศ'), 
     '#default_value' => $form_state['values']['sex'],
     '#options' => array(t('ชาย'), t('หญิง')),
     '#required' =>TRUE,
    );
  }
  if(empty($form_state['values']['age'])){
    $form['age'] = array(
      '#type' => 'select', 
      '#title' => t('ช่วงอายุ'), 
      '#options' => Config::$age_renges,
      '#required' =>TRUE,
    );
  }else{
    $form['age'] = array(
      '#type' => 'select', 
      '#title' => t('ช่วงอายุ'), 
      '#options' => Config::$age_renges,
      '#required' =>TRUE,
      '#default_value' => $form_state['values']['age'],
    );
  }
  if(empty($form_state['values']['job'])){
    $form['job'] = array(
      '#type' => 'select', 
      '#title' => t('อาชีพ'), 
      //'#default_value' => variable_get('เลือกอาชีพ','student'),
      '#options' => Config::$job_renges,
 
    );
  }else{
    $form['job'] = array(
      '#type' => 'select', 
      '#title' => t('อาชีพ'), 
      '#default_value' => $form_state['values']['job'],
      '#options' => Config::$job_renges,
 
    );
  }
  if(empty($form_state['values']['address'])){
    $form['address'] = array(
      '#type' => 'select', 
      '#title' => t('ที่อยู่'), 
      //'#default_value' => variable_get('เลือกจังหวัดที่อาศัย','bkk'),
      '#options' => Config::$address_renges,
    );
  }else{
    $form['address'] = array(
      '#type' => 'select', 
      '#title' => t('ที่อยู่'), 
      '#default_value' => $form_state['values']['address'],
      '#options' => Config::$address_renges,
    );
  }
  if(empty($form_state['values']['hight'])){
    $form['hight'] = array(
      '#type' => 'select', 
      '#title' => t('ส่วนสูง'),
      '#required' =>TRUE, 
      //'#default_value' => variable_get('เลือกส่วนสูง','1'),
      '#options' => Config::$hight_renges,
    );
  }else{
    $form['hight'] = array(
      '#type' => 'select', 
      '#title' => t('ส่วนสูง'),
      '#required' =>TRUE, 
      '#default_value' => $form_state['values']['hight'],
      '#options' => Config::$hight_renges,
    );
  }
  if(empty($form_state['values']['weight'])){
    $form['weight'] = array(
      '#type' => 'select', 
      '#title' => t('น้ำหนัก'),
      '#required' =>TRUE, 
      //'#default_value' => variable_get('เลือกน้ำหนัก','1'),
      '#options' => Config::$weight_renges,
    );
  }else{
    $form['weight'] = array(
      '#type' => 'select', 
      '#title' => t('น้ำหนัก'),
      '#required' =>TRUE, 
      '#default_value' =>$form_state['values']['weight'],
      '#options' => Config::$weight_renges,
    );
  }
  if(empty($form_state['values']['status'])){
   $form['status'] = array(
      '#type' => 'select', 
      '#title' => t('สถานภาพ'), 
      //'#default_value' => variable_get('เลือกสถานภาพ','1'),
      '#options' => Config::$status_renges,
    
    );
  }else{
    $form['status'] = array(
    '#type' => 'select', 
    '#title' => t('สถานภาพ'), 
    '#default_value' => $form_state['values']['status'],
    '#options' => Config::$status_renges,
    
  );
  }
  $form['page'] = array('#type' => 'hidden', '#value' => 'personal');
  $form['back'] = array(
    '#type' => 'submit',
    '#value' => t('Back'),
   
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Next'),
   
  );
  return $form;
}

function check_form($form_state){
  /** get old things
    
  **/
  $form['email']= array('#type' => 'hidden', '#value' => $form_state['values']['email']);
  $form['sex']= array('#type' => 'hidden', '#value' => $form_state['values']['sex']);
  $form['age']= array('#type' => 'hidden', '#value' => $form_state['values']['age']);
  $form['job']= array('#type' => 'hidden', '#value' => $form_state['values']['job']);
  $form['address']= array('#type' => 'hidden', '#value' => $form_state['values']['address']);
  $form['hight']= array('#type' => 'hidden', '#value' => $form_state['values']['hight']);
  $form['weight']= array('#type' => 'hidden', '#value' => $form_state['values']['weight']);
  $form['status']= array('#type' => 'hidden', '#value' => $form_state['values']['status']);

  /**
     set something
  */
  $config = new Config();
  $info = $config->getShows();
  $value = $config->getKeys();
  
  
  $score = 0;
  
  /**display check boxes
  */
  drupal_set_message(print_r($form_state['values'],1));
  if(empty($form_state['values']['count'])){
    $form['point'] = array(
      '#type' => 'checkboxes',
      '#title' => 'วันนี้คุณทำอะไรบ้างคะ',
      '#options' => array_combine($value,$info),
    );
  }else{    
    $def_value = array();
    for($i=0;$i<$form_state['values']['count'];$i++){
      $def_value[$i]=$form_state['values']['key'.$i];
    }
    $form['point'] = array(
      '#type' => 'checkboxes',
      '#title' => 'วันนี้คุณทำอะไรบ้างคะ',
      '#options' => array_combine($value,$info),
      '#default_value' =>$def_value,
    );
  }
  $form['page'] = array('#type' => 'hidden', '#value' => 'check');  
  $form['back'] = array(
    '#type' => 'submit',
    '#value' => t('Back'),
   
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Next'),
   
  );
  return $form;
  
}

function scale_form($form_state){
  $config = new Config();
  /**
    get olds thing
  */
  $form['email']= array('#type' => 'hidden', '#value' => $form_state['values']['email']);
  $form['sex']= array('#type' => 'hidden', '#value' => $form_state['values']['sex']);
  $form['age']= array('#type' => 'hidden', '#value' => $form_state['values']['age']);
  $form['job']= array('#type' => 'hidden', '#value' => $form_state['values']['job']);
  $form['address']= array('#type' => 'hidden', '#value' => $form_state['values']['address']);
  $form['hight']= array('#type' => 'hidden', '#value' => $form_state['values']['hight']);
  $form['weight']= array('#type' => 'hidden', '#value' => $form_state['values']['weight']);
  $form['status']= array('#type' => 'hidden', '#value' => $form_state['values']['status']);
  

  //
  $i=0;
  foreach($form_state['values']['point'] as $key){
    $myobject = Checker::getChecker($key);
    drupal_set_message($myobject->image);
    if($key>0){
      $scale = array_combine($myobject->scale,$myobject->frequent);
      //drupal_set_message(print_r($key,1));
      $form['key'.$i] =array('#type' => 'hidden', '#value' => $key);
      $form['scale'.$i] =array(
        '#type' => 'select', 
        '#title' => $myobject->frequent_question, 
        //'#default_value' => variable_get('เลือกจังหวัดที่อาศัย','bkk'),
        '#options' => $scale,
      
      );
      $i++;
    }
  }
  $form['count']= array('#type' => 'hidden', '#value' => $i);
  $form['page'] = array('#type' => 'hidden', '#value' => 'scale');  
  $form['back'] = array(
    '#type' => 'submit',
    '#value' => t('Back'),
   
  );
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Next'),
   
  );
  return $form;
  
}

function logic($form_state){
  $config = new Config();
  $hash = getHash();

  $water = 0;
  $carbon = 0;
  for($i=0;$i<$form_state['values']['count'];$i++){
    $key =$form_state['values']['key'.$i];
    $scale = $form_state['values']['scale'.$i];
    $myobject = Checker::getChecker($key);
    $water+=$scale*$myobject->water_factor;
    $carbon+=$scale*$myobject->carbon_factor;
  }
  
  $data = array(
    'nid' => '',
    'hash' => $hash,
    'carbon' => $carbon,
    'water' => $water,
    'address' => $form_state['values']['address'],
    'occupation' => $form_state['values']['job'],
    'weight' => $form_state['values']['weight'],
    'height' => $form_state['values']['height'],
    'status' => $form_state['values']['status'],
    'sex' => $form_state['values']['sex'],
    'email' => $form_state['values']['email'],  );
  if(save_result($data)){
    drupal_set_message('result/'.$hash);
    drupal_set_message('LOGIC SECTION');
    
    drupal_goto('result/'.$hash);
  }else{
  
  }
  

}

function popform($form_state) {
  $info = array('car','plane','bike');
  $value = array(3,5,0);
  $score=0;
  if(!empty($form_state['values'])){
    
    foreach($form_state['values']['foo'] as $i){
      $score +=$i;
    }
   // $show .= nat(3,20,'carbon');
    drupal_set_message(print_r(nat($score,20,'carbon'),1));
  }
  $form['foo'] = array(
    '#type' => 'checkboxes',
    '#title' => 'วันนี้คุณทำอะไรบ้างคะ',
    '#options' => array_combine($value,$info),
    //'#description' => t('baz'),
  );
  //drupal_set_message(print_r(array_combine($info,$img),1));
  $form['submit'] = array(
    '#type' => 'submit',
    '#value' => t('Save'),
   
  );
  //$form[ '#action'] =url("admin/result");

  return $form;
}

function popform_submit(&$form, &$form_state) {
  $form_state['storage']['values'] = $form_state['values'];
  $form_state['rebuild'] = TRUE;
  $score = 0;
  foreach($form_state['values']['foo'] as $i){
      $score +=$i;
  }
  drupal_goto('admin/result',array("score"=>$score));
}

/**
          How Cool Theme Management !!!

*/

function howcool_theme($existing, $type, $theme, $path) {
  return array(
    'headline' => array(
      'arguments' => array('name' => 'npop'),
    ),
  );
}

function theme_headline($name){
  return "<h1>*******$name********</h1><br>";
}

